# -*- coding: utf-8 -*-
"""Face_detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YsK2NJO6R6fBF9rPx4Bi_RO_1J1uqNmi
"""

import cv2

# Will load the cascade
#It's possible to use it to detect faces. It returns the faces' coordinates, which can then be saved as a file.
face_cascade=cv2.CascadeClassifier(cv2.data.haarcascades + "haarcascade_frontalface_default.xml")
img = cv2.imread('photo.jpg')
# Will convert image into grayscale
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
# For detecting faces
faces = face_cascade.detectMultiScale(gray, 1.3, 4)
# Will draw coordinates around the faces
for (x, y, w, h) in faces:
    cv2.rectangle(img, (x, y), (x+w, y+h), (255, 0, 0), 2)
    crop_face = img[y:y + h, x:x + w]  
    cv2.imwrite(str(w) + str(h) + '_faces.jpg', crop_face)
#Output
from google.colab.patches import cv2_imshow
cv2_imshow(img)
cv2_imshow(crop_face)
cv2.waitKey()

